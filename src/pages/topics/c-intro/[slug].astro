---
import Layout from '@layouts/Layout.astro';
import PracticePane from '@components/PracticePane';
import Header from '@components/Header.astro';

const { slug } = Astro.params;
if (slug === undefined) {
    throw new Error('Slug should always be present!');
}

const matches = import.meta.glob('/src/content/classes/c-intro/*.mdx', {
    eager: true,
});

const lesson = matches[`/src/content/classes/c-intro/${slug}.mdx`];
if (lesson === undefined) {
    return Astro.redirect('/topics/c-intro/');
}

const { Content, exercises: ex, frontmatter } = lesson;

const condition = ex.at(0).condition ?? '';

const initialCode: string = ex.at(0).init_code?.trim() ?? '';
if (ex != undefined && initialCode === '') {
    throw Error(
        'Exercise given with no initial code. Leave at least a comment!',
    );
}
---

<Layout title="Welcome to Astro.">
    <Header />

    <main class="full">
        <div class="container">
            <div class="breadcrums">
                <a href="/topics/">Topics</a> /
                <a href="/topics/c-intro/">C Introduction</a> /
                <span>{frontmatter.title}</span>
            </div>

            <h1>{frontmatter.title}</h1>

            <div class="split">
                <div class:list={[{ half: ex !== undefined }]}>
                    <Content />
                </div>

                {
                    ex && (
                        <div class="editor">
                            <div>{condition}</div>

                            <PracticePane
                                client:load
                                check={ex.test_data !== undefined}
                                exId={`c-intro/${slug}`}
                                initialCode={initialCode}
                            />
                        </div>
                    )
                }
            </div>
        </div>
    </main>

    <!-- TODO: Implement Footer -->
</Layout>

<style>
    .breadcrums {
        display: flex;
        flex-direction: row;
        padding: 1rem 0 0.5rem 0;
        column-gap: 0.5rem;
    }

    .container {
        margin: 0 2rem;
    }

    .split {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .half {
        max-width: 100%;
    }

    @media (min-width: 1024px) {
        .half {
            width: 50%;
        }

        .split {
            flex-direction: row;
        }
    }

    .editor {
        white-space: pre-wrap;
    }
</style>

<style is:global>
    pre {
        padding: 0.5rem;
    }

    .out {
        font-family: monospace;
    }

    .codearea {
        font-family: monospace !important;
        font-size: 1rem !important;

        border: 1px solid black !important;
        border-radius: 0.3rem;
    }
</style>
